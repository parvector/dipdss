# Generated by Django 3.1.7 on 2021-03-26 16:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import dss.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FGModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fg_name', models.CharField(default='', max_length=64)),
                ('f', models.TextField()),
                ('g', models.TextField()),
                ('isused', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='NSGA3Model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alg_name', models.CharField(default='', max_length=64)),
                ('ref_dirs', models.TextField(blank=True, help_text='input format:[x,y,...,z],[x,y,...,z],...,[x,y,...,z]. Float format:1.2', null=True, validators=[dss.models.vals_have_same_dim])),
                ('auto_ref_dirs_method', models.CharField(blank=True, choices=[('None', 'None'), ('das-dennis', 'das-dennis'), ('energy', 'energy')], default='None', max_length=11)),
                ('auto_ref_dirs_dimensions', models.PositiveIntegerField(blank=True, null=True)),
                ('auto_ref_dirs_npartitions', models.PositiveIntegerField(blank=True, null=True)),
                ('pop_size', models.PositiveIntegerField(default=10)),
                ('eliminate_duplicates', models.BooleanField(default=True)),
                ('n_offsprings', models.CharField(blank=True, max_length=16, null=10, validators=[dss.models.is_positive_int_or_None])),
                ('n_gen', models.PositiveIntegerField(default=10)),
                ('isused', models.BooleanField(default=False)),
                ('user_fk', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProblemModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problem_name', models.CharField(max_length=64)),
                ('nvar', models.PositiveIntegerField()),
                ('nobj', models.PositiveIntegerField()),
                ('ncostr', models.PositiveIntegerField()),
                ('xl', models.TextField(help_text='input format:[x,y,...,z],[x,y,...,z],...,[x,y,...,z]. Float format:1.2', null=True, validators=[dss.models.vals_have_same_dim])),
                ('xu', models.TextField(help_text='input format:[x,y,...,z],[x,y,...,z],...,[x,y,...,z]. Float format:1.2', null=True, validators=[dss.models.vals_have_same_dim])),
                ('isused', models.BooleanField(default=False)),
                ('nsga3_fk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dss.nsga3model')),
            ],
        ),
        migrations.CreateModel(
            name='UNSGA3Model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alg_name', models.CharField(default='', max_length=64)),
                ('ref_dirs', models.TextField(blank=True, help_text='input format:[x,y,...,z],[x,y,...,z],...,[x,y,...,z]. Float format:1.2', null=True, validators=[dss.models.vals_have_same_dim])),
                ('auto_ref_dirs_method', models.CharField(blank=True, choices=[('None', 'None'), ('das-dennis', 'das-dennis'), ('energy', 'energy')], default='None', max_length=11)),
                ('auto_ref_dirs_dimensions', models.PositiveIntegerField(blank=True, null=True)),
                ('auto_ref_dirs_npartitions', models.PositiveIntegerField(blank=True, null=True)),
                ('pop_size', models.PositiveIntegerField(default=10)),
                ('eliminate_duplicates', models.BooleanField(default=True)),
                ('n_offsprings', models.CharField(blank=True, max_length=16, null=10, validators=[dss.models.is_positive_int_or_None])),
                ('n_gen', models.PositiveIntegerField(default=10)),
                ('isused', models.BooleanField(default=False)),
                ('user_fk', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TaskModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_name', models.CharField(default='', max_length=64)),
                ('error_result', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('Ready', 'Ready'), ('Launched', 'Launched'), ('Error', 'Error'), ('Succes', 'Succes')], default='Ready', max_length=11)),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_time', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('is_hv', models.BooleanField(default=False)),
                ('fgs_fk', models.ManyToManyField(to='dss.FGModel')),
                ('nsga3_fk', models.ManyToManyField(blank=True, to='dss.NSGA3Model')),
                ('problem_fk', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dss.problemmodel')),
                ('unsga3_fk', models.ManyToManyField(blank=True, to='dss.UNSGA3Model')),
                ('user_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='problemmodel',
            name='unsga3_fk',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dss.unsga3model'),
        ),
        migrations.AddField(
            model_name='problemmodel',
            name='user_fk',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='fgmodel',
            name='problem_fk',
            field=models.ManyToManyField(blank=True, to='dss.ProblemModel'),
        ),
        migrations.AddField(
            model_name='fgmodel',
            name='user_fk',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ResultModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result_x', models.TextField(blank=True)),
                ('result_f', models.TextField(blank=True)),
                ('result_g', models.TextField(blank=True)),
                ('hv', models.FloatField(blank=True, null=True)),
                ('nsga3_fk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dss.nsga3model')),
                ('problem_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dss.problemmodel')),
                ('task_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dss.taskmodel')),
                ('unsga3_fk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dss.unsga3model')),
            ],
            options={
                'unique_together': {('task_fk', 'nsga3_fk', 'unsga3_fk', 'problem_fk')},
            },
        ),
    ]
